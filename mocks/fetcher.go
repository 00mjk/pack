// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/buildpack/pack (interfaces: Fetcher)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	image "github.com/buildpack/lifecycle/image"
	gomock "github.com/golang/mock/gomock"
	io "io"
	reflect "reflect"
)

// MockFetcher is a mock of Fetcher interface
type MockFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockFetcherMockRecorder
}

// MockFetcherMockRecorder is the mock recorder for MockFetcher
type MockFetcherMockRecorder struct {
	mock *MockFetcher
}

// NewMockFetcher creates a new mock instance
func NewMockFetcher(ctrl *gomock.Controller) *MockFetcher {
	mock := &MockFetcher{ctrl: ctrl}
	mock.recorder = &MockFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFetcher) EXPECT() *MockFetcherMockRecorder {
	return m.recorder
}

// FetchLocalImage mocks base method
func (m *MockFetcher) FetchLocalImage(arg0 string) (image.Image, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchLocalImage", arg0)
	ret0, _ := ret[0].(image.Image)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchLocalImage indicates an expected call of FetchLocalImage
func (mr *MockFetcherMockRecorder) FetchLocalImage(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchLocalImage", reflect.TypeOf((*MockFetcher)(nil).FetchLocalImage), arg0)
}

// FetchRemoteImage mocks base method
func (m *MockFetcher) FetchRemoteImage(arg0 string) (image.Image, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchRemoteImage", arg0)
	ret0, _ := ret[0].(image.Image)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchRemoteImage indicates an expected call of FetchRemoteImage
func (mr *MockFetcherMockRecorder) FetchRemoteImage(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchRemoteImage", reflect.TypeOf((*MockFetcher)(nil).FetchRemoteImage), arg0)
}

// FetchUpdatedLocalImage mocks base method
func (m *MockFetcher) FetchUpdatedLocalImage(arg0 context.Context, arg1 string, arg2 io.Writer) (image.Image, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchUpdatedLocalImage", arg0, arg1, arg2)
	ret0, _ := ret[0].(image.Image)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchUpdatedLocalImage indicates an expected call of FetchUpdatedLocalImage
func (mr *MockFetcherMockRecorder) FetchUpdatedLocalImage(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchUpdatedLocalImage", reflect.TypeOf((*MockFetcher)(nil).FetchUpdatedLocalImage), arg0, arg1, arg2)
}
