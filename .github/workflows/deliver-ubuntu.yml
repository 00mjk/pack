name: delivery / ubuntu
on: push
  #release:
    #types:
      #- released

jobs:
    create-ppa:
      strategy:
        fail-fast: false
        matrix:
          target: [xenial, bionic, focal]
          include:
            - target: xenial
              runner: ubuntu-16.04
              image: docker://ubuntu:16.04
            - target: bionic
              runner: ubuntu-18.04
              image: docker://ubuntu:18.04
            - target: focal
              runner: ubuntu-20.04
              image: docker://ubuntu:20.04
      name: create-ppa
      runs-on:  ${{ matrix.runner }}

      steps:
          - name: Checkout code
            uses: actions/checkout@v2
          - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/* || true

          - name: Metadata
            id: metadata
            run: |
                # todo handle these error cases
                git_description=$(git describe --tags --long)
                #git_description="0.0.0-001-$(git rev-parse --short HEAD)"
                version=$(echo "${git_description}" | awk -F- '{print $(1)}' | sed 's/^v//')
                revision=$(echo "${git_description}" | awk -F- '{print $(NF-1)}')
                commit=$(echo "${git_description}" | awk -F- '{print $(NF)}'  | sed 's/^g//')
                echo "::set-output name=version::$version"
                echo "::set-output name=revision::$revision"
                echo "::set-output name=commit::$commit"
                echo "::set-output name=date::$(date +"%a, %d %b %Y %T %z")"

          - name: Install packaging tools
            run: |
                sudo apt-get update
                sudo apt-get install software-properties-common -y
                sudo add-apt-repository ppa:longsleep/golang-backports -y
                sudo apt-get update
                sudo apt-get install gnupg dput dh-make devscripts lintian golang -y

          - name: Fill debian/*
            uses: cschleiden/replace-tokens@v1
            with:
              files: '[".github/workflows/delivery/ubuntu/debian/*"]'
              tokenPrefix: '{{'
              tokenSuffix: '}}'
            env:
              ARCH: "any"
              #PACKAGE_NAME: "pack-cli"
              PACKAGE_NAME: "test-package"
              UBUNTU_VERSION:  ${{ matrix.target }}
              HOMEPAGE: "https://buildpacks.io"
              PACK_VERSION: ${{ steps.metadata.outputs.version }}
              REPO: "buildpacks/pack"
              DESCRIPTION: "CLI for building apps using Cloud Native Buildpacks"
              DATE_TIME: ${{ steps.metadata.outputs.date }}
              MAINTAINER_NAME: thorntondwt
              MAINTAINER_EMAIL: thorntondwt@gmail.com

          - name: Create PPA
            env:
              #PACKAGE_NAME: "pack-cli"
              PACKAGE_NAME: "test-package"
              PACKAGE_VERSION: ${{ steps.metadata.outputs.version }}
              MAINTAINER: "thorntondwt"
              MAINTANER_EMAIL: "thorntondwt@gmail.com"
              GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
              GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
            run: ./.github/workflows/scripts/create_ppa.sh

          - name: Test Xenial
            if: matrix.target == 'xenial'
            uses: docker://ubuntu:16.04
            env:
              PACKAGE_NAME: "test-package"
            with:
              entrypoint: .github/workflows/delivery/ubuntu/test-install-package.sh

          - name: Test Bionic
            if: matrix.target == 'bionic'
            uses: docker://ubuntu:18.04
            env:
              PACKAGE_NAME: "test-package"
            with:
              entrypoint: .github/workflows/delivery/ubuntu/test-install-package.sh

          - name: Test Focal
            if: matrix.target == 'focal'
            uses: docker://ubuntu:20.04
            env:
              PACKAGE_NAME: "test-package"
            with:
              entrypoint: .github/workflows/delivery/ubuntu/test-install-package.sh

          - name: Upload
            env:
              PPA_DEST: "ppa:thorntondwt/testppa"
            run: |
              dput "${PPA_DEST}" ./../*.changes


