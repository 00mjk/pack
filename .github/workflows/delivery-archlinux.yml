name: delivery / archlinux

on:
  release:
    types:
      - published

jobs:
  pack-cli:
    runs-on: ubuntu-latest
    env:
      PACKAGE_NAME: pack-cli
    steps:
      - uses: actions/checkout@v2
      - name: Determine version
        run: echo "::set-env name=PACK_VERSION::`echo ${{ github.event.release.tag_name }} | cut -d "v" -f2`"
        shell: bash
      - name: Setup working dir
        run: |
          mkdir -p ${{ env.PACKAGE_NAME }}
          cp .github/workflows/delivery/archlinux/${{ env.PACKAGE_NAME }}/PKGBUILD ${{ env.PACKAGE_NAME }}/PKGBUILD
      - name: Metadata
        id: metadata
        run: |
          url=https://github.com/buildpacks/pack/archive/v${{ env.PACK_VERSION }}.tar.gz
          filename=pack-${{ env.PACK_VERSION }}.tgz
          fullpath=`pwd`/$filename

          curl -sSL "$url" -o "$fullpath"
          sha512=$(sha512sum "$fullpath" | awk '{ print $1 }')
          echo "::set-output name=url::$url"
          echo "::set-output name=sha512::$sha512"
      - name: Fill PKGBUILD
        uses: cschleiden/replace-tokens@v1
        with:
          files: ${{ env.PACKAGE_NAME }}/PKGBUILD
          tokenPrefix: '{{'
          tokenSuffix: '}}'
        env:
          PACK_VERSION: ${{ env.PACK_VERSION }}
          SRC_TGZ_URL: ${{ steps.metadata.outputs.url }}
          SRC_TGZ_SHA: ${{ steps.metadata.outputs.sha512 }}
      - name: Print PKGBUILD
        run: cat ${{ env.PACKAGE_NAME }}/PKGBUILD
      - name: Test
        uses: docker://archlinux:latest
        with:
          entrypoint: .github/workflows/delivery/archlinux/test-install-package.sh
      - name: Publish
        uses: docker://archlinux:latest
        env:
          AUR_KEY: ${{ secrets.AUR_KEY }}
        with:
          entrypoint: .github/workflows/delivery/archlinux/publish-package.sh
  pack-cli-bin:
    runs-on: ubuntu-latest
    env:
      PACKAGE_NAME: pack-cli-bin
    steps:
      - uses: actions/checkout@v2
      - name: Determine version
        run: |
          [[ $GITHUB_REF =~ ^refs\/heads\/release/(.*)$ ]] && version=${BASH_REMATCH[1]} || version=0.0.0
          echo "::set-env name=PACK_VERSION::$version"
        shell: bash
      - name: Set up go
        uses: actions/setup-go@v2-beta
        with:
          go-version: '1.14'
      - name: Set up go env
        run: |
          echo "::set-env name=GOPATH::$(go env GOPATH)"
          echo "::add-path::$(go env GOPATH)/bin"
      - name: Build and Package
        run: make build package
        env:
          PACK_BUILD: ${{ github.run_number }}
      - name: Setup working dir
        run: |
          mkdir -p ${{ env.PACKAGE_NAME }}/
          cp .github/workflows/delivery/archlinux/${{ env.PACKAGE_NAME }}/PKGBUILD ${{ env.PACKAGE_NAME }}/PKGBUILD
      - name: Package bin
        id: package_bin
        run: |
          filename=pack-${{ env.PACK_VERSION }}.tgz
          fullpath=${{ env.PACKAGE_NAME }}/$filename

          mv ./out/*.tgz $fullpath

          # debug info
          ls -al $fullpath
          sha512sum $fullpath

          sha=$(sha512sum $fullpath | awk '{ print $1 }')
          echo "::set-output name=sha::$sha"
          echo "::set-output name=filename::$filename"
      - name: Fill PKGBUILD
        uses: cschleiden/replace-tokens@v1
        with:
          files: ${{ env.PACKAGE_NAME }}/PKGBUILD
          tokenPrefix: '{{'
          tokenSuffix: '}}'
        env:
          PACK_VERSION: ${{ env.PACK_VERSION }}
          BIN_TGZ_URL: ${{ steps.package_bin.outputs.filename }}
          BIN_TGZ_SHA: ${{ steps.package_bin.outputs.sha }}
      - name: Print PKGBUILD
        run: cat ${{ env.PACKAGE_NAME }}/PKGBUILD
      - name: Test
        uses: docker://archlinux:latest
        with:
          entrypoint: .github/workflows/delivery/archlinux/test-install-package.sh